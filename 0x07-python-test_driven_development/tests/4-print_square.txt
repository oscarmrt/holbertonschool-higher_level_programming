Module ``4-print_square``

using ``print_square``

import function:
        >>> print_square = __import__("4-print_square").print_square

check module docstring:
        >>> module = __import__("4-print_square").__doc__
        >>> len(module) > 1
        True

check function docstring:
        >>> function = __import__("4-print_square").print_square.__doc__
        >>> len(function) > 1
        True

check if size is an integer:
        >>> print_square("H")
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

check if size is positive:
        >>> print_square(-7)
        Traceback (most recent call last):
        ...
        ValueError: size must be >= 0

check if size is a float and positive:
        >>> print_square(-0.5)
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

check missing one argument
        >>> print_square()
        Traceback (most recent call last):
        ...
        TypeError: print_square() missing 1 required positional argument: 'size'

check inf
        >>> print_square(float('inf'))
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

check none
        >>> print_square(float('nan'))
        Traceback (most recent call last):
        ...
        TypeError: size must be an integer

check zero prints nothing
        >>> print_square(0)