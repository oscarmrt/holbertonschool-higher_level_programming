Module ``2-matrix_divided``

using ``matrix_divided``

import function:
        >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

check module docstring:
        >>> module = __import__("2-matrix_divided").__doc__
        >>> len(module) > 1
        True

check function docstring:
        >>> function = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(function) > 1
        True

check division by zero:
        >>> matrix_divided([[2, 4, 6], [3, 5, 7]], 0)
        Traceback (most recent call last):
        ...
        ZeroDivisionError: division by zero

check list of lists:
        >>> matrix_divided([[2, 4, 6], "Holberton"], 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

check lists of the same size:
       >>> matrix_divided([[2, 4, 6], [1, 3, 5, 7]], 2)
       Traceback (most recent call last):
       ...
       TypeError: Each row of the matrix must have the same size

check none for matrix
        >>> matrix_divided(None, 1)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

check without matrix
        >>> matrix_divided()
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

check integer instead of matrix
        >>> matrix_divided(5, 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

check for list divided by string
        >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hbtn")
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

check infinite number
        >>> matrix_divided([[1, 2], [3, 4]], float('inf'))
        [[0.0, 0.0], [0.0, 0.0]]

check nan
        >>> matrix_divided([[0]], float('nan'))
        [[nan]]

check normal behavior:
        >>> matrix_divided([[2, 4, 6], [3, 5, 7]], 1)
        [[2.0, 4.0, 6.0], [3.0, 5.0, 7.0]]
